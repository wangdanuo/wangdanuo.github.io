<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Error: Invalid hook call……</title>
    <url>/2020/04/02/Error-Invalid-hook-call%E2%80%A6%E2%80%A6/</url>
    <content><![CDATA[<p>React项目报错：<br>Error: Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:<br>You might have mismatching versions of React and the renderer (such as React DOM)</p>
<a id="more"></a>
<p>You might be breaking the Rules of Hooks<br>You might have more than one copy of React in the same app<br><img src="../../../../images/2020/image01.png" alt="image"><br>解决：报错原因是react或react-dom丢包，运行cnpm i react react-dom -S重新安装即可。</p>
]]></content>
      <categories>
        <category>Debug</category>
      </categories>
      <tags>
        <tag>react</tag>
      </tags>
  </entry>
  <entry>
    <title>闭包并不会造成内存泄漏</title>
    <url>/2020/02/27/%E9%97%AD%E5%8C%85%E5%B9%B6%E4%B8%8D%E4%BC%9A%E9%80%A0%E6%88%90%E5%86%85%E5%AD%98%E6%B3%84%E6%BC%8F/</url>
    <content><![CDATA[<p>问题：闭包会造成内存泄露?<br>错，这是一个流传多年的谣言。因为IE6时代有bug，IE在我们使用完闭包之后，依然回收不了闭包里面引用的变量。这是IE的问题，不是闭包的问题，而且IE后来已经修复了这个bug。<br>内存泄露是指你用不到（访问不到）的变量，依然占居着内存空间，不能被再次利用起来。闭包里面的变量就是我们需要的变量，说成“内存泄漏”并不恰当。<br>由于闭包会使得函数中的变量都被保存在内存中，内存消耗很大，所以不能滥用闭包，否则会造成网页的性能问题。</p>
]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo的文章如何删除干净?</title>
    <url>/2020/02/21/hexo%E7%9A%84%E6%96%87%E7%AB%A0%E5%A6%82%E4%BD%95%E5%88%A0%E9%99%A4%E5%B9%B2%E5%87%80/</url>
    <content><![CDATA[<p>1.到目录/source/_posts下删除相应的文章<br>2.$ hexo g<br>3.$ hexo d<br>注意：如果是用其他编辑器（如VScode）打开的，要将对应的文章也一并删除。</p>
<a id="more"></a>
<p><strong>补充：hexo常用指令</strong><br>  hexo n [layout] <title>  #新建文章<br>    layout 可选参数，用以指定文章类型，若无指定则默认由配置文件中的 default_layout 选项决定<br>    title 必填参数，用以指定文章标题，如果参数值中含有空格，则需要使用双引号包围<br>  hexo clean  #清理缓存文件<br>  hexo g  #生成文件<br>  hexo s  #运行本地服务器<br>  hexo d  #部署到远程服务器</p>
]]></content>
      <categories>
        <category>建站</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo更换主题后报错：WARN No layout: index.html?</title>
    <url>/2020/02/21/hexo%E6%9B%B4%E6%8D%A2%E4%B8%BB%E9%A2%98%E5%90%8E%E6%8A%A5%E9%94%99%EF%BC%9AWARN%20No%20layout%20index.html/</url>
    <content><![CDATA[<p>1.hexo更换主题后运行，页面提示：WARN No layout: index.html?使用hexo clean，重新运行hexo generate后还是空白。<br>2.错误原因：在themes文件夹下运行git clone指令获得主题后（假设是next主题），其在themes文件夹中的名称为：hexo-theme-next-0.4.0，如果在_config.yml文件夹中设置的是theme: next，就会出现这样的WARN。<br>3.解决方法：把themes下对应主题的文件夹名称改为next即可。</p>
<a id="more"></a>
<p><strong>补充：</strong><br>问题：hexo修改主题文件之后，网页不更新。<br>解决：为了强制浏览器更新资源文件，可以采用”Ctrl+F5”来强制刷新。</p>
]]></content>
      <categories>
        <category>建站</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>解决git clone加载过慢的问题</title>
    <url>/2020/02/21/%E8%A7%A3%E5%86%B3git-clone%E5%8A%A0%E8%BD%BD%E8%BF%87%E6%85%A2%E7%9A%84%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<p>问题：当项目过大时，git clone时速度太慢。<br>解决：在git clone时加上- -depth=1，如：git clone <a href="https://github.com/litten/hexo-theme-yilia.git" target="_blank" rel="noopener">https://github.com/litten/hexo-theme-yilia.git</a> - -depth=1。<br>depth用于指定克隆深度，为1即表示只克隆最近一次commit。<br>这种方法克隆的项目只包含最近的一次commit的一个分支，体积很小，即可解决遇到的项目过大导致Timeout的问题。</p>
]]></content>
      <categories>
        <category>Git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
</search>
